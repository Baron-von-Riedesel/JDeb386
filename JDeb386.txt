
 1. About JDeb386

  JDeb386 is a ring 0 debugger for Jemm386/JemmEx. It's using DebugRV,
 a variant of the ring0 debugger core DebugR. It can be used to debug any
 program running in the context of a v86-monitor program ( JemmEx/Jemm386),
 in both protected-mode and v86-mode.


 2. Usage
 
  JDeb386 is a JLM and uses JLoad to load itself in the v86-monitor address
 context. To install, just enter JDeb386. Once JDeb386 is loaded and
 initialized, it will become active when

  - an exception is detected; this includes debug exceptions and breakpoints
  - SysReq ( Alt & Print ) is pressed; may not work with all keyboard drivers

  To unload JDeb386 from memory, one has to run JLoad explicitely:
  
    JLoad -u JDeb386.exe

  For a description of the debugger commands see Debug.txt.


 3. Features & Restrictions

 - since JDeb386 is a JLM it has no DOS memory footprint. Also, since it
   doesn't modify the IVT, it's very hard for programs to detect it, and even
   harder to protect against it.
   
 - JDeb386 needs at least Jemm v5.83.

 - JDeb386 does not handle protected-mode software that runs as VCPI client
   ( DOS extenders ). Those run in their very own context, with different
   address space (CR3), GDT and IDT.

 - The Jemm386/JemmEx address space is sparsely populated - most linear
   addresses are "invalid", causing a page fault if access is tried. Such
   errors won't do any harm.
 
 - If pressing SysReq won't stop in the debugger, the BIOS/keyboard driver
   may need a little help - then try SReqHlp.exe! Note that this is a very
   simple TSR, it won't check if it's already installed, so be sure to launch
   it just once.

 - JLoad installs a subset of the Win9X ring 0 API, which uses interrupt 20h
   in protected-mode as a sort of dynamic link mechanism. JDeb386 is unaware
   of this API and handles Int 20h like any other software interrupt - that is,
   it might write a breakpoint instruction ( int 3 ) just behind the Int 20h.
   This should cause a GPF, since the Int 20h API expects two words as
   arguments just behind the Int 20h. So if an Int 20h is seen, one has to
   either avoid the T(race) cmd [using G(o)] or set TM 1.

 - I/O handling:
    With cmdline option /C[1-4] one may switch I/O to a serial port.
   If this option isn't used, low-level video and keyboard access are used
   as default. It's possible for JDeb386 to use the mode switching routines
   of the v86-monitor (to call BIOS function INT 10h/16h), but in many cases
   this isn't acceptable for low-level debugging.
    Low-level keyboard access needs information about the current keyboard
   layout. There's a tool provided, PLang.exe, that writes keyboard layout
   data into the JDeb386.exe binary. The default layout is US. Layout data
   that's used by PLang.exe is contained in KbdLay.bin - currently it has
   entries for US and GR - further layouts may be added.


 4. License

 JDeb386 is released under the MIT license. See license.txt for details.

 Andreas Grech
